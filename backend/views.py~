from backend import app, dbapi, errorhelper
from flask import request, redirect, jsonify, g

from flask_cors import CORS, cross_origin
CORS(app)

from flask_httpauth import HTTPBasicAuth
auth = HTTPBasicAuth()

def handleResponse(res, success=200):
    response = jsonify(res)
    if 'data' in res:
        response.status_code = success
    elif 'error' in res:    
        response.status_code = res['error']['code']
    else:
        response = jsonify(errorhelper.generateError(500, 
                                'internal server error'))
        response.status_code = 500
    return response

def invalidUser(user, password):
    if user is None:
        return True
    if dbapi.verifyPassword(user, password) is False:
        return True

@auth.verify_password #Method called on @auth.login_required decorators
def verifyPassword(uname_or_token, password):
    user = dbapi.getUserByToken(uname_or_token) #try token:unused auth
    if user is None: #try user:pass auth
        user = dbapi.getUserByName(uname_or_token)
        if invalidUser(user, password):
            return False
    g.user = user
    return True
